{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Toast from 'react-native-root-toast';\nimport React, { Component, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { APIbaseURL, styles } from \"../../App\";\nimport axios from \"axios\";\nimport { fetchUser as _fetchUser } from \"../../redux/actions/userActions\";\nimport { connect } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation,\n      fetchUser = _ref.fetchUser;\n\n  var _useState = useState('rohitparakh4@gmail.com'),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState('1111'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var setItemAsyncStorage = function setItemAsyncStorage(key, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function setItemAsyncStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var login = function login() {\n    var paramsObject;\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            paramsObject = new URLSearchParams();\n            paramsObject.append('email', email);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(APIbaseURL + \"/user/login\", {\n              params: paramsObject\n            }).then(function (response) {\n              if (response.data.errors) {\n                console.log(response.data.errors);\n              }\n\n              if (response.data[0].password === password) {\n                console.log(\"No Error\" + response.data[0]);\n                fetchUser(response.data[0]);\n                setItemAsyncStorage('loggedUser', response.data[0]);\n                Toast.show('Login successful', {\n                  duration: 5500,\n                  position: -70,\n                  shadow: true,\n                  animation: true,\n                  hideOnPress: true,\n                  delay: 0\n                });\n                navigation.navigate('Home');\n              } else {\n                Toast.show('Wrong Password', {\n                  duration: 5500,\n                  position: -70,\n                  shadow: true,\n                  animation: true,\n                  hideOnPress: true,\n                  delay: 0\n                });\n              }\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      textTransform: 'uppercase',\n      letterSpacing: 5,\n      position: 'absolute',\n      top: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Login Screen\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Email: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Password: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntryexpo: true,\n    publish: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: login,\n    style: {\n      padding: 15,\n      backgroundColor: '#c01c27',\n      margin: 15,\n      width: '60%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      textAlign: 'center',\n      letterSpacing: 5,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: function fetchUser(user) {\n      dispatch(_fetchUser(user));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/Login.js"],"names":["Toast","React","Component","useState","APIbaseURL","styles","axios","fetchUser","connect","AsyncStorage","Login","navigation","email","setEmail","password","setPassword","setItemAsyncStorage","key","value","jsonValue","JSON","stringify","setItem","login","paramsObject","URLSearchParams","append","get","params","then","response","data","errors","console","log","show","duration","position","shadow","animation","hideOnPress","delay","navigate","catch","error","container","fontSize","textTransform","letterSpacing","top","flexDirection","alignItems","flex","maxHeight","minWidth","width","borderWidth","borderColor","height","borderRadius","padding","backgroundColor","margin","color","textAlign","mapDispatchToProps","dispatch","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;;;;;;;AAWA,SAAOC,UAAP,EAAkBC,MAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAS,IAATA,UAAT;AACA,SAAOC,OAAP,QAAqB,aAArB;AAIA,OAAOC,YAAP,MAAyB,2CAAzB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAGR;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJJ,SACI,QADJA,SACI;;AACJ,kBAA0BJ,QAAQ,CAAC,wBAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCV,QAAQ,CAAC,MAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,mBAAmB,GAAC,SAApBA,mBAAoB,CAAOC,GAAP,EAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBC,YAAAA,SAFgB,GAEJC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFI;AAAA;AAAA,6CAGhBT,YAAY,CAACa,OAAb,CAAqBL,GAArB,EAA0BE,SAA1B,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AASA,MAAMI,KAAK,GAAC,SAANA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,YAAAA,YADI,GACW,IAAIC,eAAJ,EADX;AAEVD,YAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6Bd,KAA7B;AAFU;AAAA,6CAGJN,KAAK,CAACqB,GAAN,CAAavB,UAAb,kBAAqC;AACzCwB,cAAAA,MAAM,EAAEJ;AADiC,aAArC,EAEHK,IAFG,CAEE,UAACC,QAAD,EAAY;AACxB,kBAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAjB,EAAwB;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,MAA1B;AACD;;AACD,kBAAGF,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBjB,QAAjB,KAA8BA,QAAjC,EAA0C;AAC1CmB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAWJ,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAvB;AACExB,gBAAAA,SAAS,CAACuB,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAT;AAEFf,gBAAAA,mBAAmB,CAAC,YAAD,EAAcc,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAd,CAAnB;AACA/B,gBAAAA,KAAK,CAACmC,IAAN,CAAW,kBAAX,EAA+B;AAC7BC,kBAAAA,QAAQ,EAAE,IADmB;AAE/BC,kBAAAA,QAAQ,EAAE,CAAC,EAFoB;AAG/BC,kBAAAA,MAAM,EAAE,IAHuB;AAI/BC,kBAAAA,SAAS,EAAE,IAJoB;AAK/BC,kBAAAA,WAAW,EAAE,IALkB;AAM/BC,kBAAAA,KAAK,EAAE;AANwB,iBAA/B;AAQE9B,gBAAAA,UAAU,CAAC+B,QAAX,CAAoB,MAApB;AACD,eAdD,MAcK;AAEH1C,gBAAAA,KAAK,CAACmC,IAAN,CAAW,gBAAX,EAA6B;AAC3BC,kBAAAA,QAAQ,EAAE,IADiB;AAE7BC,kBAAAA,QAAQ,EAAE,CAAC,EAFkB;AAG7BC,kBAAAA,MAAM,EAAE,IAHqB;AAI7BC,kBAAAA,SAAS,EAAE,IAJkB;AAK7BC,kBAAAA,WAAW,EAAE,IALgB;AAM7BC,kBAAAA,KAAK,EAAE;AANsB,iBAA7B;AAQD;AACI,aA/BK,EA+BHE,KA/BG,CA+BG,UAACC,KAAD,EAAS;AAChBX,cAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,aAjCK,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAuCE,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAaC,MAAAA,aAAa,EAAC,WAA3B;AAAuCC,MAAAA,aAAa,EAAC,CAArD;AACjBX,MAAAA,QAAQ,EAAC,UADQ;AACIY,MAAAA,GAAG,EAAC;AADR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,EAGQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAC,KAAf;AAAqBC,MAAAA,UAAU,EAAC,QAAhC;AAAyCC,MAAAA,IAAI,EAAC,CAA9C;AAAgDC,MAAAA,SAAS,EAAC,EAA1D;AAA6DC,MAAAA,QAAQ,EAAC;AAAtE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADI,EAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC,CAAb;AAAeC,MAAAA,WAAW,EAAC,MAA3B;AAAkCF,MAAAA,KAAK,EAAC,KAAxC;AAA8CG,MAAAA,MAAM,EAAC,EAArD;AAAwDC,MAAAA,YAAY,EAAC;AAArE,KAAlB;AACC,IAAA,KAAK,EAAE/C,KADR;AACe,IAAA,YAAY,EAAEC,QAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAHR,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACqC,MAAAA,aAAa,EAAC,KAAf;AAAqBC,MAAAA,UAAU,EAAC,QAAhC;AAAyCC,MAAAA,IAAI,EAAC,CAA9C;AAAgDC,MAAAA,SAAS,EAAC,EAA1D;AAA6DC,MAAAA,QAAQ,EAAC;AAAtE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC,CAAb;AAAeC,MAAAA,WAAW,EAAC,MAA3B;AAAkCF,MAAAA,KAAK,EAAC,KAAxC;AAA8CG,MAAAA,MAAM,EAAC,EAArD;AAAwDC,MAAAA,YAAY,EAAC;AAArE,KAAlB;AACC,IAAA,KAAK,EAAE7C,QADR;AACkB,IAAA,YAAY,EAAEC,WADhC;AAC6C,IAAA,mBAAmB,MADhE;AACiE,IAAA,OAAO,MADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,EAaI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEQ,KAA3B;AAAkC,IAAA,KAAK,EAAE;AAACqC,MAAAA,OAAO,EAAC,EAAT;AAAYC,MAAAA,eAAe,EAAC,SAA5B;AAAsCC,MAAAA,MAAM,EAAC,EAA7C;AAAgDP,MAAAA,KAAK,EAAC;AAAtD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAC,OAAP;AAAeC,MAAAA,SAAS,EAAC,QAAzB;AAAkChB,MAAAA,aAAa,EAAC,CAAhD;AAAkDD,MAAAA,aAAa,EAAC;AAAhE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbJ,CADJ;AAmBH,CA1ED;;AA4EA,IAAMkB,kBAAkB,GAAC,SAAnBA,kBAAmB,CAAAC,QAAQ,EAAE;AACjC,SAAM;AACJ3D,IAAAA,SAAS,EAAC,mBAAC4D,IAAD,EAAQ;AAChBD,MAAAA,QAAQ,CAAC3D,UAAS,CAAC4D,IAAD,CAAV,CAAR;AACH;AAHK,GAAN;AAKD,CAND;;AAQA,eAAe3D,OAAO,CAAC,IAAD,EAAMyD,kBAAN,CAAP,CAAiCvD,KAAjC,CAAf","sourcesContent":["import Toast from 'react-native-root-toast';\r\nimport React, { Component,useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Text,\r\n  TextInput\r\n} from \"react-native\";\r\n\r\nimport{APIbaseURL,styles} from \"../../App\"\r\nimport axios from \"axios\";\r\nimport { fetchUser } from \"../../redux/actions/userActions\";\r\nimport{connect} from 'react-redux'\r\n\r\n// import {AsyncStorage} from \"react-native\";\r\n// import AsyncStorage from \"@react-native-community/async-storage\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst Login = ({\r\n  navigation,\r\n  fetchUser\r\n}) => {\r\n  const [email, setEmail] = useState('rohitparakh4@gmail.com');\r\n  const [password, setPassword] = useState('1111');\r\n\r\n  const setItemAsyncStorage=async (key,value)=>{\r\n    try{\r\n      const jsonValue = JSON.stringify(value)\r\n      await AsyncStorage.setItem(key, jsonValue)\r\n    }catch(error){\r\n      // console.log(error)\r\n    }\r\n  }\r\n\r\n  const login=async()=>{\r\n    const paramsObject = new URLSearchParams();\r\n    paramsObject.append('email', email);\r\n    await axios.get(`${APIbaseURL}/user/login`,{\r\n      params: paramsObject\r\n    }).then((response)=>{\r\nif(response.data.errors){\r\n  console.log(response.data.errors)\r\n}\r\nif(response.data[0].password === password){\r\nconsole.log(\"No Error\"+response.data[0])\r\n  fetchUser(response.data[0]);\r\n  \r\nsetItemAsyncStorage('loggedUser',response.data[0])  \r\nToast.show('Login successful', {\r\n  duration: 5500,\r\nposition: -70,\r\nshadow: true,\r\nanimation: true,\r\nhideOnPress: true,\r\ndelay: 0,\r\n});\r\n  navigation.navigate('Home')\r\n}else{\r\n  // console.log('Wrong password')\r\n  Toast.show('Wrong Password', {\r\n    duration: 5500,\r\n  position: -70,\r\n  shadow: true,\r\n  animation: true,\r\n  hideOnPress: true,\r\n  delay: 0,\r\n  });\r\n}\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n                <Text style={{fontSize:20,textTransform:'uppercase',letterSpacing:5,\r\n            position:'absolute', top:30}}>Login Screen</Text>\r\n                <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Email: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={email} onChangeText={setEmail}></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Password: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={password} onChangeText={setPassword} secureTextEntryexpo publish ></TextInput>\r\n            </View>\r\n            <TouchableOpacity onPress={login} style={{padding:15,backgroundColor:'#c01c27',margin:15,width:'60%'}}>\r\n                <Text style={{color:'white',textAlign:'center',letterSpacing:5,textTransform:'uppercase'}}>Login</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    fetchUser:(user)=>{\r\n      dispatch(fetchUser(user));\r\n  }\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Login)\r\n"]},"metadata":{},"sourceType":"module"}