{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/Signup.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Toast from 'react-native-root-toast';\nimport React, { Component, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { styles } from \"../../App\";\nimport axios from \"axios\";\nimport { APIbaseURL } from \"../../App\";\nimport { fetchUser as _fetchUser } from \"../../redux/actions/userActions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation,\n      fetchUser = _ref.fetchUser;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState('rohitparakh4@gmail.com'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(9840989414),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState('612, Akash Ganga Apartments'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addressLine1 = _useState8[0],\n      setAddressLine1 = _useState8[1];\n\n  var _useState9 = useState('Kilpauk, Chennai-10'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addressLine2 = _useState10[0],\n      setAddressLine2 = _useState10[1];\n\n  var _useState11 = useState('1111'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var setItemAsyncStorage = function setItemAsyncStorage(key, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function setItemAsyncStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var signup = function signup() {\n    var newUser, res;\n    return _regeneratorRuntime.async(function signup$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newUser = {\n              'name': name,\n              'email': email,\n              'phone': phone,\n              'password': password,\n              'addressLine1': addressLine1,\n              'addressLine2': addressLine2\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(APIbaseURL + \"/user/new\", newUser).then(function (response) {\n              if (response.data.code === 11000) {} else if (response.data.errors) {} else {\n                fetchUser(response.data);\n\n                try {\n                  setItemAsyncStorage('loggedUser', response.data);\n                  Toast.show('Signup successful.', {\n                    duration: 5500,\n                    position: -70,\n                    shadow: true,\n                    animation: true,\n                    hideOnPress: true,\n                    delay: 0\n                  });\n                } catch (error) {}\n\n                navigation.navigate('Account');\n              }\n            }).catch(function (error) {}));\n\n          case 3:\n            res = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      textTransform: 'uppercase',\n      letterSpacing: 5,\n      position: 'absolute',\n      top: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Signup Screen\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Name: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: name,\n    onChangeText: setName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Email: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Password: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Phone: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: phone.toString(),\n    onChangeText: function onChangeText(e) {\n      return setPhone(parseInt(e));\n    },\n    keyboardType: 'numeric',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Address Line 1: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: addressLine1,\n    onChangeText: setAddressLine1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 50,\n      minWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Address Line 2: \"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#000',\n      width: '50%',\n      height: 40,\n      borderRadius: 3\n    },\n    value: addressLine2,\n    onChangeText: setAddressLine2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: signup,\n    style: {\n      padding: 15,\n      backgroundColor: '#c01c27',\n      margin: 15,\n      width: '60%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      textAlign: 'center',\n      letterSpacing: 5,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Signup\")));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: function fetchUser(user) {\n      dispatch(_fetchUser(user));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/Signup.js"],"names":["Toast","React","Component","useState","connect","styles","axios","APIbaseURL","fetchUser","AsyncStorage","Signup","navigation","name","setName","email","setEmail","phone","setPhone","addressLine1","setAddressLine1","addressLine2","setAddressLine2","password","setPassword","setItemAsyncStorage","key","value","jsonValue","JSON","stringify","setItem","signup","newUser","post","then","response","data","code","errors","show","duration","position","shadow","animation","hideOnPress","delay","error","navigate","catch","res","container","fontSize","textTransform","letterSpacing","top","flexDirection","alignItems","flex","maxHeight","minWidth","width","borderWidth","borderColor","height","borderRadius","toString","e","parseInt","padding","backgroundColor","margin","color","textAlign","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import Toast from 'react-native-root-toast';\r\nimport React, { Component,useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Text,\r\n  TextInput\r\n} from \"react-native\";\r\nimport{connect} from 'react-redux'\r\nimport{styles} from \"../../App\"\r\nimport axios from \"axios\";\r\nimport {APIbaseURL} from '../../App'\r\nimport { fetchUser } from \"../../redux/actions/userActions\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Signup = ({\r\n    navigation,\r\nfetchUser\r\n}) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('rohitparakh4@gmail.com');\r\n    const [phone, setPhone] = useState(9840989414);\r\n    const [addressLine1, setAddressLine1] = useState('612, Akash Ganga Apartments');\r\n    const [addressLine2, setAddressLine2] = useState('Kilpauk, Chennai-10');\r\n    const [password, setPassword] = useState('1111');\r\n\r\n    const setItemAsyncStorage=async (key,value)=>{\r\n        try{\r\n            const jsonValue = JSON.stringify(value)\r\n            await AsyncStorage.setItem(key, jsonValue)\r\n        }catch(error){\r\n        //   console.log(error)\r\n        }\r\n      }\r\n\r\n    const signup=async()=>{\r\n        var newUser={\r\n            'name':name,\r\n            'email':email,\r\n            'phone':phone,\r\n            'password':password,\r\n            'addressLine1':addressLine1,\r\n            'addressLine2':addressLine2\r\n        }\r\n        // console.log(newUser)\r\n        const res=await axios.post(`${APIbaseURL}/user/new`,newUser ).then(function (response) {\r\n            if(response.data.code === 11000){\r\n                // console.log('Email already is use')\r\n            }else if(response.data.errors){\r\n                // console.log(response.data.message)\r\n            }else{\r\n                // console.log(response.data)\r\n                fetchUser(response.data);\r\n               try {\r\n                setItemAsyncStorage('loggedUser',response.data)\r\n                Toast.show('Signup successful.', {\r\n                    duration: 5500,\r\n                  position: -70,\r\n                  shadow: true,\r\n                  animation: true,\r\n                  hideOnPress: true,\r\n                  delay: 0,\r\n                  });\r\n                } catch (error) {\r\n                //    console.log(error)\r\n               } \r\n                // console.log('Registered successfully');\r\n                navigation.navigate('Account')\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            // console.log(error);\r\n          });\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n                <Text style={{fontSize:20,textTransform:'uppercase',letterSpacing:5,\r\n            position:'absolute', top:30}}>Signup Screen</Text>\r\n                <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Name: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={name} onChangeText={setName}></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Email: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={email} onChangeText={setEmail}></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Password: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={password} onChangeText={setPassword} secureTextEntry></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Phone: </Text>\r\n            <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={phone.toString()} onChangeText={e=>setPhone(parseInt(e))} keyboardType={'numeric'}></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Address Line 1: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={addressLine1} onChangeText={setAddressLine1}></TextInput>\r\n            </View>\r\n            <View style={{flexDirection:'row',alignItems:'center',flex:1,maxHeight:50,minWidth:'50%'}}>\r\n            <Text style={{width:'20%'}}>Address Line 2: </Text>\r\n                <TextInput style={{borderWidth:1,borderColor:'#000',width:'50%',height:40,borderRadius:3}}\r\n                 value={addressLine2} onChangeText={setAddressLine2}></TextInput>\r\n            </View>\r\n    \r\n            <TouchableOpacity onPress={signup} style={{padding:15,backgroundColor:'#c01c27',margin:15,width:'60%'}}>\r\n                <Text style={{color:'white',textAlign:'center',letterSpacing:5,textTransform:'uppercase'}}>Signup</Text>\r\n            </TouchableOpacity>\r\n          {/* <FlatText color='#000' textalign='center' text=\"Signup screen\" font=\"q_regular\" size={20} /> */}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        fetchUser:(user)=>{\r\n            dispatch(fetchUser(user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Signup)\r\n"]},"metadata":{},"sourceType":"module"}