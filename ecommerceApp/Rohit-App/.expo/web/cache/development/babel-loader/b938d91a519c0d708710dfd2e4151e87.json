{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/EditAccount.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Toast from 'react-native-root-toast';\nimport React, { Component, useState, useEffect } from \"react\";\n;\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport { styles, APIbaseURL } from \"../../App\";\nimport { connect } from 'react-redux';\nimport { editUser as _editUser } from \"../../redux/actions/userActions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar EditAccount = function EditAccount(_ref) {\n  var navigation = _ref.navigation,\n      userData = _ref.userData,\n      editUser = _ref.editUser;\n\n  var _useState = useState(userData.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(userData.addressLine1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addressLine1 = _useState4[0],\n      setAddressLine1 = _useState4[1];\n\n  var _useState5 = useState(userData.addressLine2),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addressLine2 = _useState6[0],\n      setAddressLine2 = _useState6[1];\n\n  var _useState7 = useState(userData.phone),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(userData.email),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(userData),\n      _useState12 = _slicedToArray(_useState11, 2),\n      user = _useState12[0],\n      setUser = _useState12[1];\n\n  var setItemAsyncStorage = function setItemAsyncStorage(key, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function setItemAsyncStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var editUserServer = function editUserServer() {\n    var res;\n    return _regeneratorRuntime.async(function editUserServer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(APIbaseURL + \"/user/edit\", user).then(function (response) {\n              if (response.data.errors) {\n                console.log(response.data.errors);\n              }\n\n              Toast.show('Account edited successfully.', {\n                duration: 5500,\n                position: -70,\n                shadow: true,\n                animation: true,\n                hideOnPress: true,\n                delay: 0\n              });\n              setItemAsyncStorage('loggedUser', response.data);\n            }));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit() {\n    var _objectSpread2;\n\n    setUser(_objectSpread(_objectSpread({}, userData), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'name', name), _defineProperty(_objectSpread2, 'addressLine1', addressLine1), _defineProperty(_objectSpread2, 'addressLine2', addressLine2), _defineProperty(_objectSpread2, 'phone', parseInt(phone)), _defineProperty(_objectSpread2, 'email', email), _objectSpread2)));\n    setTimeout(function () {\n      navigation.navigate('Home', {\n        route: 'Account'\n      });\n    }, 1000);\n  };\n\n  useEffect(function () {\n    editUser(user);\n    editUserServer();\n  }, [user]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      backgroundColor: '#eee',\n      fontSize: 25,\n      textTransform: 'uppercase',\n      letterSpacing: 5,\n      textAlign: 'center',\n      color: '#c01c27',\n      borderBottomColor: '#000',\n      height: 40,\n      marginLeft: 10,\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Account Details\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginLeft: 15,\n      marginVertical: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: css.profileImg,\n    source: {\n      uri: \"https://ui-avatars.com/api/?background=C01C27&color=fff&size=100&name=\" + encodeURIComponent(userData.name.trim())\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Hi, \", userData.name)), React.createElement(View, {\n    style: css.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Name\"), React.createElement(TextInput, {\n    value: name,\n    onChangeText: setName,\n    style: css.dataInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: css.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Address Line 1\"), React.createElement(TextInput, {\n    value: addressLine1,\n    onChangeText: setAddressLine1,\n    style: css.dataInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: css.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Address Line 2\"), React.createElement(TextInput, {\n    value: addressLine2,\n    onChangeText: setAddressLine2,\n    style: css.dataInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: css.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Phone\"), React.createElement(TextInput, {\n    numeric: true,\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(e) {\n      return setPhone(parseInt(e));\n    },\n    value: phone.toString(),\n    style: css.dataInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: css.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    value: email,\n    onChangeText: setEmail,\n    style: css.dataInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onSubmit,\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      padding: 15,\n      backgroundColor: '#c01c27',\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Save\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: state.userData.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    editUser: function editUser(item) {\n      dispatch(_editUser(item));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccount);\nvar css = StyleSheet.create({\n  profileImg: {\n    width: 45,\n    height: 45,\n    borderRadius: 60,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 15\n  },\n  heading: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    maxWidth: '40%'\n  },\n  dataInput: {\n    fontSize: 15,\n    borderColor: '#999',\n    borderWidth: 1,\n    width: '60%',\n    padding: 10\n  },\n  dataContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginHorizontal: 10,\n    paddingVertical: 15\n  }\n});","map":{"version":3,"sources":["/Users/rohitparakh/Desktop/Mobile Apps/Rohit-mern-app/Rohit-App/src/screens/EditAccount.js"],"names":["Toast","React","Component","useState","useEffect","axios","styles","APIbaseURL","connect","editUser","AsyncStorage","EditAccount","navigation","userData","name","setName","addressLine1","setAddressLine1","addressLine2","setAddressLine2","phone","setPhone","email","setEmail","user","setUser","setItemAsyncStorage","key","value","jsonValue","JSON","stringify","setItem","console","log","editUserServer","post","then","response","data","errors","show","duration","position","shadow","animation","hideOnPress","delay","res","onSubmit","parseInt","setTimeout","navigate","route","flex","backgroundColor","fontSize","textTransform","letterSpacing","textAlign","color","borderBottomColor","height","marginLeft","marginTop","flexDirection","alignItems","justifyContent","marginVertical","css","profileImg","uri","encodeURIComponent","trim","dataContainer","heading","dataInput","e","toString","padding","mapStateToProps","state","mapDispatchToProps","dispatch","item","StyleSheet","create","width","borderRadius","marginRight","fontWeight","maxWidth","borderColor","borderWidth","marginHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import Toast from 'react-native-root-toast';\r\nimport React, { Component,useState,useEffect } from \"react\";;\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  TextInput\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { styles,APIbaseURL } from '../../App';\r\nimport {connect} from 'react-redux';\r\nimport {editUser} from '../../redux/actions/userActions'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst EditAccount = ({\r\n  navigation,\r\n  userData,\r\n  editUser\r\n}) => {\r\n\r\nconst [name, setName] = useState(userData.name)\r\nconst [addressLine1, setAddressLine1] = useState(userData.addressLine1)\r\nconst [addressLine2, setAddressLine2] = useState(userData.addressLine2)\r\nconst [phone, setPhone] = useState(userData.phone)\r\nconst [email, setEmail] = useState(userData.email)\r\n\r\nconst[user,setUser]= useState(userData)\r\n\r\nconst setItemAsyncStorage=async (key,value)=>{\r\n  try{\r\n    const jsonValue = JSON.stringify(value)\r\n    await AsyncStorage.setItem(key, jsonValue)\r\n  }catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst editUserServer=async()=>{\r\n  const res=await axios.post(`${APIbaseURL}/user/edit`,user ).then(function (response) {\r\n    if(response.data.errors){\r\n      console.log(response.data.errors)\r\n     }\r\n     Toast.show('Account edited successfully.', {\r\n      duration: 5500,\r\n    position: -70,\r\n    shadow: true,\r\n    animation: true,\r\n    hideOnPress: true,\r\n    delay: 0,\r\n    });\r\n      setItemAsyncStorage('loggedUser',response.data);\r\n })\r\n}\r\n\r\nconst onSubmit=()=>{\r\n    setUser({\r\n        ...userData,\r\n        ['name']:name,\r\n    ['addressLine1']:addressLine1,\r\n    ['addressLine2']:addressLine2,\r\n    ['phone']:parseInt(phone),\r\n    ['email']:email,\r\n    })\r\n    setTimeout(() => {\r\n    navigation.navigate('Home',{route:'Account'})      \r\n    }, 1000);\r\n}\r\n\r\nuseEffect(() => {\r\n    editUser(user)\r\n    editUserServer();\r\n\r\n}, [user])\r\n\r\n\r\n  return (\r\n    <View style={{flex:1}}>\r\n              <Text style={{backgroundColor:'#eee',fontSize:25,textTransform:'uppercase',\r\n              letterSpacing:5, textAlign:'center',color:'#c01c27',borderBottomColor:'#000',\r\n              height:40,marginLeft:10,marginTop:30}}>Account Details</Text>\r\n\r\n              \r\n          <View style={{flexDirection:'row',alignItems:'center',justifyContent:'center', marginLeft:15, marginVertical:15}} >\r\n                <Image style={css.profileImg}\r\n                source={{ uri: `https://ui-avatars.com/api/?background=C01C27&color=fff&size=100&name=${encodeURIComponent(userData.name.trim())}` }}\r\n                />\r\n                <Text style={{fontSize:20}}>Hi, {userData.name}</Text>\r\n          </View>\r\n          <View style={css.dataContainer}>\r\n          <Text style={css.heading}>Name</Text>\r\n          <TextInput value={name} onChangeText={setName} style={css.dataInput}></TextInput>\r\n          </View>\r\n          <View style={css.dataContainer}>\r\n          <Text style={css.heading}>Address Line 1</Text>\r\n          <TextInput value={addressLine1} onChangeText={setAddressLine1} style={css.dataInput}></TextInput>\r\n          </View>\r\n          <View style={css.dataContainer}>\r\n          <Text style={css.heading}>Address Line 2</Text>\r\n          <TextInput value={addressLine2} onChangeText={setAddressLine2} style={css.dataInput}></TextInput>\r\n          </View>\r\n          <View style={css.dataContainer}>\r\n          <Text style={css.heading}>Phone</Text>\r\n          <TextInput numeric keyboardType={'numeric'} onChangeText={(e)=>setPhone(parseInt(e))} value={phone.toString()} style={css.dataInput}></TextInput>\r\n          </View>\r\n          <View style={css.dataContainer}>\r\n          <Text style={css.heading}>Email</Text>\r\n          <TextInput value={email} onChangeText={setEmail} style={css.dataInput}></TextInput>\r\n          </View>\r\n          <TouchableOpacity onPress={onSubmit}\r\n          style={{flex:1,alignItems:'center',justifyContent:'center'}}>\r\n          <Text style={{padding:15,backgroundColor:'#c01c27',color:'#fff'}}>Save</Text>\r\n          </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData:state.userData.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        editUser: (item) => {\r\n      dispatch(editUser(item));\r\n    }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(EditAccount)\r\n\r\nconst css=StyleSheet.create({\r\n  profileImg: {\r\n    width: 45,\r\n    height: 45,\r\n    borderRadius: 60,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginRight:15\r\n  },\r\n  heading:{\r\n    fontSize:16,\r\n    fontWeight:'bold',\r\n    maxWidth:'40%'\r\n  },\r\n  dataInput:{\r\n    fontSize:15,\r\n    borderColor:'#999',\r\n    borderWidth:1,\r\n    width:'60%',\r\n    padding:10\r\n  },\r\n  dataContainer:{\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    alignItems:'center',\r\n    marginHorizontal:10,\r\n    // borderBottomWidth :1,\r\n    paddingVertical:15,\r\n    // borderBottomColor: '#aaa',\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}